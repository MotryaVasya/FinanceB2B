from importlib.resources import read_text
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from project.bot.messages.messages import *
from aiogram.types import Message
from aiogram.filters import or_f

from project.bot.handlers.start import Context
from project.bot.keyboards.reply import (
    Money_keyboard,
    get_categories_keyboard,
    get_transaction_keyboard,
    help_keyboard,
)
router=Router()

@router.message(F.text == "–ü–æ–º–æ—â—å")
async def help_handler(message: Message):
    try:
        await message.answer(
            read_text,
            reply_markup=await help_keyboard()
        )
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞: {e.__class__.__name__}: {e}")

@router.message(F.text=="–ë–∞–ª–∞–Ω—Å")
async def cash_handler(message: Message):
    text=(f"üí´ –í–∞—à –±–∞–ª–∞–Ω—Å: \n–£ —Ç–µ–±—è –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º! üßò‚Äç‚ôÇÔ∏è\n ")
    try:
        await message.answer(
            text,
            reply_markup=await Money_keyboard()
        )
        
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞: {e.__class__.__name__}: {e}")

@router.message(F.text == "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏")
async def categories_handler(message: Message, state: FSMContext):
    try:
        await state.set_state(Context.IN_CATEGORIES)
        await message.answer(
            cattegory_text,
            reply_markup=await get_categories_keyboard()
        )
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞: {e.__class__.__name__}: {e}")

@router.message(or_f(F.text == "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è",F.text=="–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º"))
async def transaction_handler(message: Message, state: FSMContext):
    try:
        await state.set_state(Context.IN_TRANSACTIONS)
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏:",
            reply_markup=await get_transaction_keyboard()
        )
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞: {e.__class__.__name__}: {e}")