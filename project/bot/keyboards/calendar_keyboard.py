from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime
from calendar import monthrange, monthcalendar

from project.bot.handlers.statistic import get_month_name

def generate_calendar(year: int, month: int, selected_day: int = None) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞."""
    builder = InlineKeyboardBuilder()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º + –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    month_name = get_month_name(month)
    builder.row(
        InlineKeyboardButton(text="‚óÄ", callback_data=f"calendar_prev_{year}_{month}"),
        InlineKeyboardButton(text=f"{month_name} {year}", callback_data="ignore"),
        InlineKeyboardButton(text="‚ñ∂", callback_data=f"calendar_next_{year}_{month}"),
    )
    
    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    week_days = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    builder.row(*[InlineKeyboardButton(text=day, callback_data="ignore") for day in week_days])
    
    # –î–Ω–∏ –º–µ—Å—è—Ü–∞
    month_days = monthcalendar(year, month)
    for week in month_days:
        row = []
        for day in week:
            if day == 0:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            else:
                emoji = "üîò" if day == selected_day else ""
                row.append(InlineKeyboardButton(
                    text=f"{emoji}{day}", 
                    callback_data=f"calendar_day_{year}_{month}_{day}"
                ))
        builder.row(*row)
    
    # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    builder.row(
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="calendar_confirm"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="calendar_cancel"),
    )
    
    return builder.as_markup()

async def get_calendar_keyboard(date: datetime = None) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞."""
    if date is None:
        date = datetime.now()
    return generate_calendar(date.year, date.month)


def generate_edit_calendar(year: int, month: int, selected_day: int = None) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã."""
    builder = InlineKeyboardBuilder()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º + –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    month_name = get_month_name(month)
    builder.row(
        InlineKeyboardButton(text="‚óÄ", callback_data=f"edit_calendar_prev_{year}_{month}"),
        InlineKeyboardButton(text=f"{month_name} {year}", callback_data="ignore"),
        InlineKeyboardButton(text="‚ñ∂", callback_data=f"edit_calendar_next_{year}_{month}"),
    )
    
    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    week_days = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    builder.row(*[InlineKeyboardButton(text=day, callback_data="ignore") for day in week_days])
    
    # –î–Ω–∏ –º–µ—Å—è—Ü–∞
    month_days = monthcalendar(year, month)
    for week in month_days:
        row = []
        for day in week:
            if day == 0:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            else:
                emoji = "üîò" if day == selected_day else ""
                row.append(InlineKeyboardButton(
                    text=f"{emoji}{day}", 
                    callback_data=f"edit_calendar_day_{year}_{month}_{day}"
                ))
        builder.row(*row)
    
    # –ö–Ω–æ–ø–∫–∞ "–°–µ–≥–æ–¥–Ω—è"
    today = datetime.now()
    if today.year == year and today.month == month:
        builder.row(
            InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data=f"edit_calendar_day_{today.year}_{today.month}_{today.day}"),
        )
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    builder.row(
        InlineKeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥", callback_data="back_to_edit_menu"),
    )
    
    return builder.as_markup()

async def get_edit_calendar_keyboard(date: datetime = None) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞."""
    if date is None:
        date = datetime.now()
    return generate_edit_calendar(date.year, date.month)