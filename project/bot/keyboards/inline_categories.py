from aiogram.utils.keyboard import InlineKeyboardBuilder

async def income_expence_back_cancel():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="–î–æ—Ö–æ–¥", callback_data="type_1")
    keyboard.button(text="–†–∞—Å—Ö–æ–¥", callback_data="type_0")
    keyboard.button(text="‚óÄ –ù–∞–∑–∞–¥", callback_data="back_to_name")
    keyboard.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_creation")
    keyboard.adjust(2, 2)
    return keyboard

async def confirm_back_cancel():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_creation")
    keyboard.button(text="‚óÄ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø", callback_data="back_to_type")
    keyboard.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_creation")
    keyboard.adjust(2, 1)
    return keyboard

async def build_pagination_keyboard_for_show(page: int, total_pages: int, user_id: int):
    builder = InlineKeyboardBuilder()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if page > 0:
        builder.button(text="<", callback_data=f"categories_prev_{user_id}")  # –ù–∞ 1 –Ω–∞–∑–∞–¥
    
    if page < total_pages - 1:
        builder.button(text=">", callback_data=f"categories_next_{user_id}")  # –ù–∞ 1 –≤–ø–µ—Ä–µ–¥
    
    if page >= 1:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if page >= 5:
            builder.button(text="<<", callback_data=f"categories_back5_{user_id}")  # –ù–∞ 5 –Ω–∞–∑–∞–¥
        else:
            builder.button(text="<<", callback_data=f"categories_first_{user_id}")  # –í –Ω–∞—á–∞–ª–æ
    
    if page < total_pages - 1:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if page + 5 < total_pages:
            builder.button(text=">>", callback_data=f"categories_forward5_{user_id}")  # –ù–∞ 5 –≤–ø–µ—Ä–µ–¥
        else:
            builder.button(text=">>", callback_data=f"categories_last_{user_id}")  # –í –∫–æ–Ω–µ—Ü

    builder.adjust(2, 2)
    return builder.as_markup()

async def choose_buttons_delete(user_id, page_categories):
    builder = InlineKeyboardBuilder()
    for category in page_categories:
        try:
            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ UTF-8
            name = category['name_category'].encode('utf-8', errors='replace').decode('utf-8')
            category_type = "–î–æ—Ö–æ–¥" if category['type'] == 1 else "–†–∞—Å—Ö–æ–¥"
            btn_text = f"{name} | {category_type}"
            
            builder.button(
                text=btn_text,
                callback_data=f"select_categoryD_{category['id']}_{name}"
            )
        except Exception as e:
            print(f"Error creating button for category: {e}")
            continue
            
    builder.button(text="‚óÄ –ù–∞–∑–∞–¥", callback_data=f"categoryD_back_{user_id}")
    builder.adjust(1)
    return builder

async def choose_buttons_update(user_id, page_categories):
    builder = InlineKeyboardBuilder()
    for tx in page_categories:
        tx_text = f"üîñ {tx['name_category']} | {tx['type']}"
        builder.button(text=tx_text, callback_data=f"select_categoryU_{tx['id']}_{tx['name_category']}")
            
    builder.button(text="‚óÄ –ù–∞–∑–∞–¥", callback_data=f"categoryU_back_{user_id}")
    builder.adjust(1)
    return builder

async def build_pagination_keyboard_for_update(page: int, total_pages: int, user_id: int):
    builder = InlineKeyboardBuilder()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if page > 0:
        builder.button(text="<", callback_data=f"categoryU_prev_{user_id}")  # –ù–∞ 1 –Ω–∞–∑–∞–¥
    
    builder.button(text="–í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É", callback_data=f"categoryU_choose_{user_id}")
    
    if page < total_pages - 1:
        builder.button(text=">", callback_data=f"categoryU_next_{user_id}")  # –ù–∞ 1 –≤–ø–µ—Ä–µ–¥

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ 5 —Å—Ç—Ä–∞–Ω–∏—Ü –∏–ª–∏ –≤ –∫—Ä–∞–π–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è
    if page >= 1:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if page >= 5:
            builder.button(text="<<", callback_data=f"categoryU_back5_{user_id}")  # –ù–∞ 5 –Ω–∞–∑–∞–¥
        else:
            builder.button(text="<<", callback_data=f"categoryU_first_{user_id}")  # –í –Ω–∞—á–∞–ª–æ
    
    if page < total_pages - 1:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if page + 5 < total_pages:
            builder.button(text=">>", callback_data=f"categoryU_forward5_{user_id}")  # –ù–∞ 5 –≤–ø–µ—Ä–µ–¥
        else:
            builder.button(text=">>", callback_data=f"categoryU_last_{user_id}")  # –í –∫–æ–Ω–µ—Ü

    builder.adjust(3, 2)
    return builder.as_markup()

async def build_pagination_keyboard_for_delete(page: int, total_pages: int, user_id: int):
    builder = InlineKeyboardBuilder()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if page > 0:
        builder.button(text="<", callback_data=f"categoryD_prev_{user_id}")  # –ù–∞ 1 –Ω–∞–∑–∞–¥
    
    builder.button(text="–í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É", callback_data=f"categoryD_choose_{user_id}")
    
    if page < total_pages - 1:
        builder.button(text=">", callback_data=f"categoryD_next_{user_id}")  # –ù–∞ 1 –≤–ø–µ—Ä–µ–¥

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ 5 —Å—Ç—Ä–∞–Ω–∏—Ü –∏–ª–∏ –≤ –∫—Ä–∞–π–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è
    if page >= 1:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if page >= 5:
            builder.button(text="<<", callback_data=f"categoryD_back5_{user_id}")  # –ù–∞ 5 –Ω–∞–∑–∞–¥
        else:
            builder.button(text="<<", callback_data=f"categoryD_first_{user_id}")  # –í –Ω–∞—á–∞–ª–æ
    
    if page < total_pages - 1:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if page + 5 < total_pages:
            builder.button(text=">>", callback_data=f"categoryD_forward5_{user_id}")  # –ù–∞ 5 –≤–ø–µ—Ä–µ–¥
        else:
            builder.button(text=">>", callback_data=f"categoryD_last_{user_id}")  # –í –∫–æ–Ω–µ—Ü

    builder.adjust(3, 2)
    return builder.as_markup()


async def confirm_or_cancel_buttons():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞", callback_data=f"confirm_delete_category")
    builder.button(text="‚ùå –ù–µ—Ç", callback_data="cancel_delete_category")
    builder.adjust(2) 
    return builder