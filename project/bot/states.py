
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message
from project.bot.keyboards.reply import *
from aiogram.fsm.context import FSMContext
class TransactionStates(StatesGroup):
    waiting_for_category_name = State()
    waiting_for_transaction_description = State()
    waiting_for_transaction_amount = State()

class CategoryStates(StatesGroup):
    waiting_for_category_name = State()
    waiting_for_category_type = State()
    new_category_name= State()

class Context(StatesGroup):
    IN_CATEGORIES = State()
    IN_TRANSACTIONS = State()

async def check_states_add(state : FSMContext,message : Message):
    match state:
        case Context.IN_CATEGORIES:
            await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        case Context.IN_TRANSACTIONS:
            await message.answer("üí∏ –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=await get_all_categories())

async def check_states_update(state : FSMContext,message : Message):
    match state:
        case Context.IN_CATEGORIES:
            await message.answer(
            "üéâ –í–æ—Ç –≤—Å–µ –≤–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏! –ö–∞–∫—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
            reply_markup=await make_categories_keyboard()
        )
        case Context.IN_TRANSACTIONS:
            await message.answer("üí∏ –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=await get_all_categories())

