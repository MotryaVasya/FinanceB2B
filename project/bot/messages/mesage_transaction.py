PAGE_SIZE = 3  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
user_pages = {} # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id: page}

async def get_paginated_transactions(user_id: int, page: int = 0):
    from project.bot.conecting_methods.transactions import get_transactions
    all_transactions = await get_transactions(user_id)
    total_pages = (len(all_transactions) + PAGE_SIZE - 1) // PAGE_SIZE
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * PAGE_SIZE
    end_idx = start_idx + PAGE_SIZE
    page_transactions = all_transactions[start_idx:end_idx]
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    formatted = []
    for tx in page_transactions: # TODO –Ω–∞–¥–æ –±—É–¥–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç 
        date = tx['date'][:10]
        formatted.append(
            f"üîñ {tx['category_name']}\n"
            f"üìÖ {date} | {tx['full_sum']:.2f} ‚ÇΩ\n"
            f"üìù {tx['description'] or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        )
    message = "\n\n".join(formatted)
    message += f"\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}/{total_pages}"
    
    return message, total_pages

async def get_paginated_category(user_id: int, page: int = 0, for_show: bool = False):
    from project.bot.conecting_methods.category import get_categories
    all_categories = await get_categories(user_id)
    
    if for_show:
        # –î–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ, –ø–æ—Ç–æ–º –æ–±—â–∏–µ
        all_categories_sorted = sorted(
            all_categories,
            key=lambda x: (0 if x['user_id'] else 1, x['name_category'])  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ name_category
        )
    else:
        # –î–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        all_categories_sorted = sorted(
            [cat for cat in all_categories if cat['user_id']],
            key=lambda x: x['name_category']  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ name_category
        )
    
    total_pages = max(1, (len(all_categories_sorted) + PAGE_SIZE - 1) // PAGE_SIZE)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * PAGE_SIZE
    end_idx = start_idx + PAGE_SIZE
    page_categories = all_categories_sorted[start_idx:end_idx]
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    formatted = []
    for tx in page_categories:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        category_type = '–î–æ—Ö–æ–¥' if tx['type'] == 1 else '–†–∞—Å—Ö–æ–¥'
        
        formatted.append(
            f"üîñ {tx['name_category']}\n"  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ name_category
            f"üìù –¢–∏–ø: {category_type}\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    header = "–í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n\n" if for_show else "–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n\n"
    message = header + "\n\n".join(formatted)
    message += f"\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}/{total_pages}"
    
    return message, total_pages